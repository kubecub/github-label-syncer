# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

# Default: './dist'
dist: _output/dist

builds:
  - binary: syncer
    id: syncer
    main: ./cmd/syncer/main.go
    goos:
      - windows
      - darwin
      - linux
      - freebsd
    goarch:
      - amd64
      - 386
      - arm
      - arm64
    goarm:
      - 6
      - 7
  - binary: exporter
    id: exporter
    main: ./cmd/exporter/main.go
    goos:
      - windows
      - darwin
      - linux
      - freebsd
    goarch:
      - amd64
      - 386
      - arm
      - arm64
    goarm:
      - 6
      - 7

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    files:
      - LICENSE
      - README.md
      - CHANGELOG/*
      - docs/*
      - src: "*.md"
        dst: docs
      # a more complete example, check the globbing deep dive below
      - src: "*.md"
        dst: docs

        # Strip parent folders when adding files to the archive.
        strip_parent: true

        # File info.
        # Not all fields are supported by all formats available formats.
        #
        # Default: copied from the source file
        info:
          # Templates: allowed (since v1.14)
          owner: root

          # Templates: allowed (since v1.14)
          group: root

          # Must be in time.RFC3339Nano format.
          #
          # Templates: allowed (since v1.14)
          mtime: "{{ .CommitDate }}"

          # File mode.
          mode: 0644

    format_overrides:
    - goos: windows
      format: zip

nfpms:
  - id: packages
    builds:
      - syncer
    # Your app's vendor.
    vendor: kubecub
    homepage: https://github.com/kubecub/github-label-syncer
    maintainer: kubbot <https://github.com/kubbot>
    description: |-
      Auto sync github labels
      Kubecub && cubxxw
    license: MIT
    formats:
      - apk
      - deb
      - rpm
      - termux.deb # Since: v1.11
      - archlinux # Since: v1.13
    dependencies:
      - git
    recommends:
      - golang

# # semantization
# snapcrafts:
#   - name_template: "{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
#     summary: sync labels
#     description: |
#       sync labels
#     grade: stable
#     confinement: classic
#     publish: true

# sboms:
  # - artifacts: archive

# signs:
  # - artifacts: checksum

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"
  algorithm: sha256

dockers:
  - use: buildx
    ids:
      - syncer
    goos: linux
    goarch: amd64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/syncer:{{ .Tag }}-amd64
    dockerfile: docker/syncer/Dockerfile.release
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=syncer
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
  - use: buildx
    ids:
      - syncer
    goos: linux
    goarch: arm64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/syncer:{{ .Tag }}-arm64
    dockerfile: docker/syncer/Dockerfile.release
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=lvscare
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
  - use: buildx
    ids:
      - sealos
    goos: linux
    goarch: amd64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/sealos:{{ .Tag }}-amd64
    dockerfile: docker/sealos/Dockerfile.release
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=sealos
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
  - use: buildx
    ids:
      - sealos
    goos: linux
    goarch: arm64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/sealos:{{ .Tag }}-arm64
    dockerfile: docker/sealos/Dockerfile.release
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=sealos
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
docker_manifests:
  - name_template: ghcr.io/{{ .Env.USERNAME }}/lvscare:{{ .Tag }}
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/lvscare:{{ .Tag }}-amd64
      - ghcr.io/{{ .Env.USERNAME }}/lvscare:{{ .Tag }}-arm64
  - name_template: ghcr.io/{{ .Env.USERNAME }}/sealos:{{ .Tag }}
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/sealos:{{ .Tag }}-amd64
      - ghcr.io/{{ .Env.USERNAME }}/sealos:{{ .Tag }}-arm64
